{"version":3,"sources":["Api/api.js","component/Navbar.js","component/Pagination.js","component/Pokemon.js","component/Pokedex.js","component/SearchBar.js","App.js","index.js"],"names":["searchPokemon","pokemon","a","fetch","respuesta","json","data","getPokemons","limit","offset","getPokemonData","url","Navbar","src","id","alt","Pagination","props","onLeftclick","onRightClick","page","totalPages","className","onClick","Pokemon","sprites","front_default","name","types","map","type","idx","Pokedex","loading","pokemons","setPage","total","lastPages","Math","max","nextPages","min","SearchBar","onSearch","useState","search","setSearch","e","placeholder","onChange","target","value","length","App","setPokemons","setTotal","setLoading","notFound","setNotFound","fetchPokemons","promises","results","Promise","all","ceil","count","useEffect","result","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9eeab122.chunk.js","sourcesContent":["export const searchPokemon = async (pokemon) => {\n    try {\n        const respuesta = await fetch(\n            `https://pokeapi.co/api/v2/pokemon/${pokemon}`\n        );\n\n        const data = await respuesta.json();\n        return data;\n    } catch (error) {\n    }\n};\n\nexport const getPokemons = async (limit=25, offset=0) => {\n    try {\n        const respuesta = await fetch(\n            `https://pokeapi.co/api/v2/pokemon?limit=${limit}&offset=${offset}`\n        );\n\n        const data = await respuesta.json();\n        return data;\n    } catch (error) {\n    }\n};\n\nexport const getPokemonData = async (url) => {\n    try {\n        const respuesta = await fetch(\n            `${url}`\n        );\n\n        const data = await respuesta.json();\n        return data;\n    } catch (error) {\n    }\n};","import React from 'react'\n\nconst Navbar = () => {\n\n    return (\n        <nav>\n            <img src='https://upload.wikimedia.org/wikipedia/commons/thumb/9/98/International_Pok%C3%A9mon_logo.svg/1200px-International_Pok%C3%A9mon_logo.svg.png'  id=\"img-nav\" alt='logo_pokemon'></img>\n        </nav>\n    )\n}\n\nexport default Navbar;\n","import React from 'react'\n\nconst Pagination = (props) => {\n    const{onLeftclick, onRightClick, page, totalPages} = props;\n\n    return (\n        <div className=\"pagination\">\n            <button onClick={onLeftclick}><i className=\"fas fa-angle-left\"></i></button>\n            <div>{page}-{totalPages}</div>\n            <button onClick={onRightClick}><i className=\"fas fa-angle-right\"></i></button>\n        </div>\n    )\n}\n\nexport default Pagination;\n","import React from 'react'\n\nconst Pokemon = (props) => {\n    const {pokemon} = props;\n    return (\n        <div className=\"pokemon-card\">\n            <div className=\"pokemon-img\">\n                <img src={pokemon.sprites.front_default}\n                alt={pokemon.name}/>\n            </div>\n\n            <div className=\"pokemon-datos\">\n\n                <div className=\"nombre\">\n                    <h3>{pokemon.name}</h3>\n                    <p>#{pokemon.id}</p>\n                </div>\n\n                <div className=\"pokemon-type\">\n                    {pokemon.types.map((type, idx)=>{\n                        return (\n                            <div className={type.type.name} key={idx}>\n                                {type.type.name}\n                            </div>\n                        )\n                    })}\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Pokemon\n","import React from 'react'\nimport Pagination from './Pagination';\nimport Pokemon from './Pokemon';\n\nconst Pokedex = (props) => {\n    const {loading,pokemons, page, setPage, total} = props;\n\n    const lastIndex = () => {\n        const lastPages = Math.max(page - 1, 0);\n        setPage(lastPages);\n    }\n\n    const nextIndex = () => {\n        const nextPages = Math.min(page + 1, total);\n        setPage(nextPages)\n    }\n    return (\n        <div>\n            <div className=\"header\">\n                <h2>Pokedex</h2>\n                <Pagination\n                page={page+1}\n                totalPages={total}\n                onLeftclick={lastIndex}\n                onRightClick={nextIndex}\n                />\n            </div>\n            {loading ? \n            (<div className=\"text-pokemon\">Cargando Pokemones</div>):\n            (<div className=\"pokedex-grid\">\n            {pokemons.map((pokemon, idx) => {\n                return <Pokemon pokemon={pokemon} key={pokemon.name}/>\n            })}\n        </div>)\n            }\n        </div>\n    )\n}\n\nexport default Pokedex;\n","import React, {useState} from 'react';\n\nconst SearchBar = (props) => {\n    const {onSearch} = props;\n\n    const [search, setSearch] = useState('');\n\n\n    const onChange = (e) => {\n        setSearch(e.target.value)\n        if(e.target.value.length === 0){\n            onSearch(null);\n        }\n    };\n\n\n    const onClick = async (e) =>{\n        onSearch(search);\n    };\n    return (\n        <div className=\"search\">\n            <div className=\"bar\">\n                <input placeholder='Buscar Pokemon' onChange={onChange}></input>\n            </div>\n            <div className=\"buscar\">\n                <button onClick={onClick}><i className=\"fas fa-search\"></i></button>\n            </div>\n        </div>\n    )\n}\n\nexport default SearchBar;","import React, {useState, useEffect} from 'react';\nimport { getPokemonData, getPokemons, searchPokemon } from './Api/api';\nimport Navbar from './component/Navbar';\nimport Pokedex from './component/Pokedex';\nimport SearchBar from './component/SearchBar'; \n\n\nfunction App() {\n  const [pokemons, setPokemons] = useState([]);\n  const [page, setPage] = useState(0);\n  const [total, setTotal] = useState();\n  const [loading, setLoading] = useState(true);\n  const [notFound, setNotFound] = useState(false);\n\n  const fetchPokemons = async () =>{\n    try {\n      setLoading(true);\n      const data = await getPokemons(24,24*page);\n      const promises = data.results.map( async (pokemon)=>{\n        return await getPokemonData(pokemon.url);\n      });\n      const results = await Promise.all(promises);\n      setPokemons(results);\n      setLoading(false)\n      setTotal(Math.ceil(data.count / 24));\n      setNotFound(false);\n    } catch (error) {\n      \n    }\n  };\n\n  useEffect(() => {\n    fetchPokemons();\n  }, [page]);\n\n  const onSearch = async (pokemon) => {\n    if(!pokemon){\n      return fetchPokemons();\n    }\n    setLoading(true);\n    setNotFound(false);\n    const result = await searchPokemon(pokemon);\n \n\n    if(!result){\n      setNotFound(true);\n      setLoading(false);\n      return;\n    }else{\n      setPokemons([result]);\n      setPage(0);\n      setTotal(1);\n    }\n\n    setLoading(false);\n  };\n\n  return (\n    <>\n     <Navbar/>\n     <SearchBar onSearch={onSearch}/>\n     {notFound ? \n     (<div className=\"notFound text-pokemon\">POKEMON NO LOCALIZADO</div>) :\n     (\n      <Pokedex \n        loading ={loading}\n        pokemons={pokemons}\n        page={page}\n        setPage={setPage}\n        total={total}\n        />)\n      }\n    </>\n  )\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}